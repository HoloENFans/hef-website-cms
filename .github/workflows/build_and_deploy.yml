name: Deployment
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci(skip):')" # If the commit contains "ci skip" this action won't run
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=raw,value=prod
            type=raw,value=latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          platforms: |-
            linux/amd64

  deploy:
    name: Deploy to k8s
    needs: [ build ]
    environment: production
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci(skip):')" # If the commit contains "ci skip" this action won't run
    steps:
      - name: Set the Kubernetes context
        uses: Azure/k8s-set-context@v4
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_SERVER }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Get short SHA
        id: sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Deploy to the Kubernetes cluster
        uses: Azure/k8s-deploy@v5
        with:
          namespace: hefw-cms
          manifests: |
            kubernetes
          images: |
            ghcr.io/holoenfans/hef-website-cms:sha-${{ steps.sha.outputs.sha_short }}
